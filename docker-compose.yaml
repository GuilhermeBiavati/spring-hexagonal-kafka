version: "3"
services:
  demo:
    build: .
    volumes:
      - ./:/app
    working_dir: /app
    command: sh run.sh
    networks:
      - spring_kafka_network
    ports:
      - 8080:8080
      - 8005:8005
    depends_on:
      - db
      - kafka
      - control-center
      - zookeeper

  db:
    image: postgres:9.4
    restart: always
    tty: true
    volumes:
      - .pgdata:/var/lib/pgsql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=email
    ports:
      - "5432:5432"
    networks:
      - spring_kafka_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    networks:
      - spring_kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    networks:
      - spring_kafka_network

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    networks:
      - spring_kafka_network

networks:
  spring_kafka_network: null
